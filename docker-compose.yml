version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: board-games-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /root/nginx/ssl:/etc/ssl/certs
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./src/frontend/game-board-frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build: .
    container_name: board-games-backend
    expose:
      - "8080"  # Только для внутренней сети
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/board_games_db
      - SPRING_DATASOURCE_USERNAME=boardgames
      - SPRING_DATASOURCE_PASSWORD=boardgames
      - SPRING_PROFILES_ACTIVE=prod
      - TELEGRAM_WEBHOOK_PATH=https://agameboardbot.site
      - TELEGRAM_BOT_USERNAME=avo_game_board_bot
      - TELEGRAM_BOT_TOKEN=your_bot_token
      - TELEGRAM_WEBAPP_URL=https://agameboardbot.site
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    container_name: board-games-db
    environment:
      POSTGRES_DB: board_games_db
      POSTGRES_USER: boardgames
      POSTGRES_PASSWORD: boardgames
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U boardgames -d board_games_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge